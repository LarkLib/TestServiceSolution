//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 
namespace TestInvockWebServiceConsoleApp
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WcsWebServiceSoap", Namespace = "http://webServiceI.ewms.zjepe.com")]
    public partial class WcsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback XMZ_WCS_SUCCESSOperationCompleted;

        private System.Threading.SendOrPostCallback XMZ_WCS_COMMANDOperationCompleted;

        /// <remarks/>
        public WcsWebService()
        {
            this.Url = "https://localhost:44315/WcsWebService.asmx";
        }

        /// <remarks/>
        public event XMZ_WCS_SUCCESSCompletedEventHandler XMZ_WCS_SUCCESSCompleted;

        /// <remarks/>
        public event XMZ_WCS_COMMANDCompletedEventHandler XMZ_WCS_COMMANDCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webServiceI.ewms.zjepe.com/XMZ_WCS_SUCCESS", RequestNamespace = "http://webServiceI.ewms.zjepe.com", ResponseNamespace = "http://webServiceI.ewms.zjepe.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XMZ_WCS_SUCCESS([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string AUTO_ID, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string IS_SUCCESS, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string AUTO_TYPE, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string IS_FINISH, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string WHSE_ID)
        {
            object[] results = this.Invoke("XMZ_WCS_SUCCESS", new object[] {
                        AUTO_ID,
                        IS_SUCCESS,
                        AUTO_TYPE,
                        IS_FINISH,
                        WHSE_ID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginXMZ_WCS_SUCCESS(string AUTO_ID, string IS_SUCCESS, string AUTO_TYPE, string IS_FINISH, string WHSE_ID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("XMZ_WCS_SUCCESS", new object[] {
                        AUTO_ID,
                        IS_SUCCESS,
                        AUTO_TYPE,
                        IS_FINISH,
                        WHSE_ID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndXMZ_WCS_SUCCESS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void XMZ_WCS_SUCCESSAsync(string AUTO_ID, string IS_SUCCESS, string AUTO_TYPE, string IS_FINISH, string WHSE_ID)
        {
            this.XMZ_WCS_SUCCESSAsync(AUTO_ID, IS_SUCCESS, AUTO_TYPE, IS_FINISH, WHSE_ID, null);
        }

        /// <remarks/>
        public void XMZ_WCS_SUCCESSAsync(string AUTO_ID, string IS_SUCCESS, string AUTO_TYPE, string IS_FINISH, string WHSE_ID, object userState)
        {
            if ((this.XMZ_WCS_SUCCESSOperationCompleted == null))
            {
                this.XMZ_WCS_SUCCESSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXMZ_WCS_SUCCESSOperationCompleted);
            }
            this.InvokeAsync("XMZ_WCS_SUCCESS", new object[] {
                        AUTO_ID,
                        IS_SUCCESS,
                        AUTO_TYPE,
                        IS_FINISH,
                        WHSE_ID}, this.XMZ_WCS_SUCCESSOperationCompleted, userState);
        }

        private void OnXMZ_WCS_SUCCESSOperationCompleted(object arg)
        {
            if ((this.XMZ_WCS_SUCCESSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XMZ_WCS_SUCCESSCompleted(this, new XMZ_WCS_SUCCESSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webServiceI.ewms.zjepe.com/XMZ_WCS_COMMAND", RequestNamespace = "http://webServiceI.ewms.zjepe.com", ResponseNamespace = "http://webServiceI.ewms.zjepe.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XMZ_WCS_COMMAND([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string AUTO_TYPE, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string WHSE_ID)
        {
            object[] results = this.Invoke("XMZ_WCS_COMMAND", new object[] {
                        AUTO_TYPE,
                        WHSE_ID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginXMZ_WCS_COMMAND(string AUTO_TYPE, string WHSE_ID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("XMZ_WCS_COMMAND", new object[] {
                        AUTO_TYPE,
                        WHSE_ID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndXMZ_WCS_COMMAND(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void XMZ_WCS_COMMANDAsync(string AUTO_TYPE, string WHSE_ID)
        {
            this.XMZ_WCS_COMMANDAsync(AUTO_TYPE, WHSE_ID, null);
        }

        /// <remarks/>
        public void XMZ_WCS_COMMANDAsync(string AUTO_TYPE, string WHSE_ID, object userState)
        {
            if ((this.XMZ_WCS_COMMANDOperationCompleted == null))
            {
                this.XMZ_WCS_COMMANDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXMZ_WCS_COMMANDOperationCompleted);
            }
            this.InvokeAsync("XMZ_WCS_COMMAND", new object[] {
                        AUTO_TYPE,
                        WHSE_ID}, this.XMZ_WCS_COMMANDOperationCompleted, userState);
        }

        private void OnXMZ_WCS_COMMANDOperationCompleted(object arg)
        {
            if ((this.XMZ_WCS_COMMANDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XMZ_WCS_COMMANDCompleted(this, new XMZ_WCS_COMMANDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void XMZ_WCS_SUCCESSCompletedEventHandler(object sender, XMZ_WCS_SUCCESSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XMZ_WCS_SUCCESSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal XMZ_WCS_SUCCESSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void XMZ_WCS_COMMANDCompletedEventHandler(object sender, XMZ_WCS_COMMANDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XMZ_WCS_COMMANDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal XMZ_WCS_COMMANDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
